plugin: resource
id: mir_ci_cases
_summary: Enumerate the cases for the mir-ci suite
estimated_duration: 0.1
imports:
  from com.canonical.plainbox import manifest
command:
  set -euo pipefail
  .
  if [ -n "$MIR_CI_SKIP_EXPRESSION" ]; then
    SKIP_LIST=( $( checkbox-mir.mir-ci --collect-only --quiet -k "$MIR_CI_SKIP_EXPRESSION" | head -n -2 ) )
  fi
  ZAPPER_LIST=( $( checkbox-mir.mir-ci --collect-only --quiet -m zapper | head -n -2 ) )
  .
  while read case; do
    echo case: $case
    echo function: ${case/*::}
    echo "skip: $( [[ " ${SKIP_LIST[*]:-} " =~ " $case " ]] && echo true || echo false )"
    echo "zapper: $( [[ " ${ZAPPER_LIST[*]} " =~ " $case " ]] && echo true || echo false )"
    echo "cgroupv2_required: $( [[ $case == *test_app_can_run* ]] && echo 1 || echo 0 )"
    echo "mir_major_version: 2"
    if [[ $case == *DragAndDrop* ]]; then
      echo "mir_minor_version: 14"
    else
      echo "mir_minor_version: 0"
    fi
    echo
  done < <( checkbox-mir.mir-ci --collect-only --quiet -m "not self" -k "${MIR_CI_EXPRESSION:-}" | head -n -2 || kill $$ )

unit: template
template-resource: mir_ci_cases
id: mir-ci/{function}
category_id: performance
imports:
  from com.canonical.certification import connections
  from com.canonical.certification import executable
  from com.canonical.certification import zapper_capabilities
requires:
  (executable.name == mir_context.host_executable and "{skip}" == "false")
  ("{zapper}" == "false" or zapper_capabilities.capability == "hdmi-capture")
  "{zapper}" == "false" or (zapper_capabilities.capability == "hid" and zapper_capabilities.mouse == "True")
  mir_context.cgroupv2_support >= "{cgroupv2_required}"
  mir_context.major_version > "{mir_major_version}" or (mir_context.major_version == "{mir_major_version}" and mir_context.minor_version >= "{mir_minor_version}")
  normal_user.uid == logind_sessions.user and logind_sessions.active == "yes" and logind_sessions.remote == "no"
  connections.plug == mir_context.host_logind_plug
  connections.plug in [mir_context.host_20_plug, mir_context.host_22_plug, mir_context.host_24_plug]
  connections.plug == mir_context.host_opengl_plug
_summary: Run Mir CI test case: {function}
plugin: shell
# Executing through snap to take advantage of the gnome extension
command: dbus-run-session checkbox-mir.mir-ci --verbose --junitxml=/tmp/mir-ci_{function}.xml --robot-log=/tmp/mir-ci_{function}.robot.html {case}

unit: template
template-resource: mir_ci_cases
id: mir-ci/{function}.xml
category_id: junit
depends: mir-ci/{function}
_summary: Collect the test report from mir/ci_{function}
plugin: attachment
command: cat /tmp/mir-ci_{function}.xml

unit: template
template-resource: mir_ci_cases
id: mir-ci/{function}.robot.html
category_id: junit
salvages: mir-ci/{function}
_summary: Collect the robot log from mir/ci_{function}
plugin: attachment
command: cat /tmp/mir-ci_{function}.robot.html
