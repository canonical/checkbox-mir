plugin: resource
id: mir_ci_cases
_summary: Enumerate the cases for the mir-ci suite
estimated_duration: 0.1
imports:
  from com.canonical.plainbox import manifest
command:
  set -euo pipefail
  .
  SKIP_LIST=()
  if [ -n "${MIR_CI_SKIP_EXPRESSION:-}" ]; then
    while read line; do
      if [[ "$line" =~ \<Module\ ([a-zA-Z0-9_.-]*)\>$ ]]; then
        MODULE=${BASH_REMATCH[1]}
      elif [[ "$line" =~ \<Class\ ([a-zA-Z0-9_.-]*)\>$ ]]; then
        CLASS=${BASH_REMATCH[1]}
      elif [[ "$line" =~ \<Function\ ([]a-zA-Z0-9_.[-]*)\>$ ]]; then
        SKIP_LIST+=( $MODULE::$CLASS::${BASH_REMATCH[1]} )
      fi
    done < <( run_mir_ci.sh --collect-only -k "$MIR_CI_SKIP_EXPRESSION" || kill $$ )
  fi
  .
  while read line; do
    if [[ "$line" =~ \<Module\ ([a-zA-Z0-9_.-]*)\>$ ]]; then
      MODULE=${BASH_REMATCH[1]}
    elif [[ "$line" =~ \<Class\ ([a-zA-Z0-9_.-]*)\>$ ]]; then
      CLASS=${BASH_REMATCH[1]}
    elif [[ "$line" =~ \<Function\ ([]a-zA-Z0-9_.[-]*)\>$ ]]; then
      case=$MODULE::$CLASS::${BASH_REMATCH[1]}
      echo case: $case
      echo function: ${BASH_REMATCH[1]}
      echo "skip: $( [[ " ${SKIP_LIST[*]} " =~ " $case " ]] && echo true || echo false )"
      echo "cgroupv2_required: $( [[ $case == *test_app_can_run* ]] && echo 1 || echo 0 )"
      echo "mir_major_version: 2"
      echo "mir_minor_version: 0"
      echo
    fi
  done < <( run_mir_ci.sh --collect-only -m "not self" -k "${MIR_CI_EXPRESSION:-}" || kill $$ )

unit: template
template-resource: mir_ci_cases
id: mir-ci/{function}
category_id: performance
imports:
  from com.canonical.certification import connections
  from com.canonical.certification import executable
requires:
  (executable.name == mir_context.host_executable and "{skip}" == "false")
  mir_context.cgroupv2_support >= "{cgroupv2_required}"
  mir_context.major_version > "{mir_major_version}" or (mir_context.major_version == "{mir_major_version}" and mir_context.minor_version >= "{mir_minor_version}")
  normal_user.uid == logind_sessions.user and logind_sessions.active == "yes" and logind_sessions.remote == "no"
  connections.plug == mir_context.host_logind_plug
  connections.plug in [mir_context.host_20_plug, mir_context.host_22_plug]
  connections.plug == mir_context.host_opengl_plug
_summary: Run Mir CI test case: {function}
plugin: shell
# Executing through snap to take advantage of the gnome extension
command: checkbox-mir.mir-ci --verbose --junitxml=/tmp/mir-ci_{function}.xml {case}

unit: template
template-resource: mir_ci_cases
id: mir-ci/{function}.xml
category_id: junit
depends: mir-ci/{function}
_summary: Collect the test report from mir/ci_{function}
plugin: attachment
command: cat /tmp/mir-ci_{function}.xml
