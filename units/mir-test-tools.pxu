plugin: resource
id: mir_test_tools_performance_cases
_summary: Enumerate the cases for the mir-test-tools performance suite
estimated_duration: 0.1
imports: from com.canonical.certification import connections
requires:
  connections.plug == "mir-test-tools:login-session-control"
command:
  set -euo pipefail
  while read line; do
    if [[ "$line" =~ ^([A-Za-z0-9_/]*)\.$ ]]; then
      SUITE=${BASH_REMATCH[1]}
    elif [[ "$line" =~ ^[A-Za-z0-9_/]+$ ]]; then
      echo case: $SUITE.${BASH_REMATCH}
      case "$SUITE" in
        *Xwayland*)
          echo wayland: False
          echo xwayland: True
          echo hosted: False
          ;;
        Hosted*)
          echo wayland: False
          echo xwayland: False
          echo hosted: True
          ;;
        *)
          echo wayland: True
          echo xwayland: False
          echo hosted: False
          ;;
      esac
      echo
    fi
  done < <( mir-test-tools.performance-test --gtest_list_tests --gtest_filter=* || kill $$ )

id: mir/smoke
imports:
  from com.canonical.certification import connections
requires:
  normal_user.uid == logind_sessions.user and logind_sessions.active == "yes" and logind_sessions.remote == "no"
  connections.plug == "mir-test-tools:login-session-control"
  connections.plug in ["mir-test-tools:graphics-core20", "mir-test-tools:graphics-core22"]
  connections.plug == "mir-test-tools:opengl"
_summary: Run Mir smoke tests
plugin: shell
command:
  if [ -n "$MIR_HOST_SERVER" ]; then
    exec run_with_wayland.sh --server $MIR_HOST_SERVER --timeout 0 -- mir-test-tools.smoke-test
  else
    exec mir-test-tools.smoke-test
  fi
_siblings: [
    {
      "id": "mir/smoke_root",
      "_summary": "Run Mir smoke tests as root",
      "user": "root",
      "requires": "connections.plug in ['mir-test-tools:graphics-core20', 'mir-test-tools:graphics-core22']\nconnections.plug == 'mir-test-tools:opengl'"
    }
  ]

unit: template
template-resource: mir_test_tools_performance_cases
id: mir/performance_{case}
imports:
  from com.canonical.plainbox import manifest
  from com.canonical.certification import connections
  from com.canonical.certification import snap
requires:
  [manifest.run_wayland_tests, "{wayland}"] == ["True", "True"] or [manifest.run_xwayland_tests, "{xwayland}"] == ["True", "True"] or [manifest.run_hosted_tests, "{hosted}"] == ["True", "True"]
  normal_user.uid == logind_sessions.user and logind_sessions.active == "yes" and logind_sessions.remote == "no"
  connections.plug == "mir-test-tools:login-session-control"
  connections.plug in ["mir-test-tools:graphics-core20", "mir-test-tools:graphics-core22"]
  connections.plug == "mir-test-tools:opengl"
_summary: Run Mir performance test case: {case}
plugin: shell
command:
  set -euo pipefail
  if [ -n "${{MIR_HOST_SERVER:-}}" ]; then
    run_with_wayland.sh --server $MIR_HOST_SERVER --timeout 0 -- \
      mir-test-tools.performance-test \
        --gtest_filter={case} \
        --gtest_output=xml:/tmp/{case}.xml && STATUS=0 || STATUS=$?
  else
    mir-test-tools.performance-test \
      --gtest_filter={case} \
      --gtest_output=xml:/tmp/{case}.xml && STATUS=0 || STATUS=$?
  fi
  LOGNAME=$( echo {case} | tr '.' '_' )
  for log in "" _server _host; do
    echo
    echo "=== 8< $LOGNAME$log.log ==="
    snap run --shell mir-test-tools.performance-test -c "cat /tmp/$LOGNAME$log.log" || true
    echo "=== $LOGNAME$log.log >8 ==="
  done
  exit $STATUS

unit: template
template-resource: mir_test_tools_performance_cases
id: mir/performance_{case}.xml
depends: mir/performance_{case}
_summary: Collect the test report from mir/performance_{case}
plugin: attachment
command: snap run --shell mir-test-tools.performance-test -c "cat /tmp/{case}.xml"
