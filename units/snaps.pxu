id: client-snaps
plugin: resource
command: cat $PLAINBOX_PROVIDER_DATA/client-snaps.resource

id: server-snaps
plugin: resource
command: cat $PLAINBOX_PROVIDER_DATA/server-snaps.resource

id: session-snaps
plugin: resource
command: cat $PLAINBOX_PROVIDER_DATA/session-snaps.resource

id: ancillary-snaps
plugin: resource
command: cat $PLAINBOX_PROVIDER_DATA/ancillary-snaps.resource

id: jenkins-snaps
plugin: resource
command: cat $PLAINBOX_PROVIDER_DATA/jenkins-snaps.resource

id: store
_summary: Enumerate revisions for all tested snaps
plugin: resource
command:
  set -euo pipefail
  while read snap; do
    while read track risk revision; do
      echo snap: $snap
      echo track: $track
      echo risk: $risk
      echo revision: $revision
      echo
    done < <( curl -s -H "Snap-Device-Series: 16" "https://api.snapcraft.io/v2/snaps/info/${snap}" \
              | jq -r --arg TRACK "latest" --arg ARCH "$( dpkg-architecture -qDEB_HOST_ARCH )" \
                '."channel-map" | .[] | select(.channel.architecture==$ARCH)
                 | [.channel.track, .channel.risk, .revision] | @tsv' \
              || kill $$ )
  done < <( cat $PLAINBOX_PROVIDER_DATA/*-snaps.resource | awk '/^snap:/ { print $2 }' | sort -u )

unit: template
template-resource: client-snaps
id: snaps/{snap}-{channel}
plugin: user-interact-verify
estimated_duration: 60.0
_purpose:
  This test verifies that {snap}/{channel} runs fine
imports:
  from com.canonical.certification import executable
requires:
  executable.name == "frame-it"
  executable.name == "ubuntu-frame"
command:
  set -xeuo pipefail
  snap $( snap list {snap} > /dev/null && echo "refresh" || echo "install" ) \
    {snap} --channel {channel}
  if [ -x /snap/{snap}/current/bin/setup.sh ]; then
    /snap/{snap}/current/bin/setup.sh
  fi
  clean_env.sh frame-it {snap}
_verification:
  1. Did {snap} start up in Frame?
  2. Can interact with it?
  3. Quit {snap}
  .
  Promote from `{channel}` to `stable` at https://snapcraft.io/{snap}/releases

unit: template
template-resource: server-snaps
id: snaps/{snap}-{channel}
plugin: user-interact-verify
estimated_duration: 60.0
_purpose:
  This test verfies that {snap}/{channel} runs fine
command:
  set -xeuo pipefail
  snap $( snap list {snap} > /dev/null && echo "refresh" || echo "install" ) \
    {snap} --channel {channel} {snap-options}
  if [ -x /snap/{snap}/current/bin/setup.sh ]; then
    /snap/{snap}/current/bin/setup.sh
  fi
  clean_env.sh {snap}
_verification:
  1. Check that {snap} starts up
  2. Check that you can interact with it
  3. Quit {snap}
  .
  Promote from `{channel}` to `stable` at https://snapcraft.io/{snap}/releases

unit: template
template-resource: session-snaps
id: snaps/{snap}-{channel}
plugin: user-interact-verify
estimated_duration: 60.0
_purpose:
  This test verfies that the {snap}/{channel} session works
  .
  1. Check that you can log in to the {snap} session
  2. Check that you can use the session OK
  3. Quit the session
command:
  set -xeuo pipefail
  snap $( snap list {snap} > /dev/null && echo "refresh" || echo "install" ) \
    {snap} --channel {channel}
  if [ -x /snap/{snap}/current/bin/setup.sh ]; then
    /snap/{snap}/current/bin/setup.sh
  fi
_verification:
  1. Were you able to log into the {snap} session?
  2. Could you use the session OK?

unit: template
template-resource: ancillary-snaps
id: snaps/{snap}-{track}-{risk}
plugin: user-interact-verify
estimated_duration: 60.0
_purpose:
  This test verfies that {snap} {track}/{risk} works
  .
  {purpose}
  .
  Quit the editor to continue.
imports:
  from com.canonical.certification import executable
requires:
  executable.name == "frame-it"
  executable.name == "ubuntu-frame"
command:
  set -xeuo pipefail
  .
  OUTPUT=$( mktemp )
  export XDG_RUNTIME_DIR=/run/user/$( id -u )
  export WAYLAND_DISPLAY=wayland-99
  .
  snap $( snap list {snap} > /dev/null && echo "refresh" || echo "install" ) \
    {snap} --channel {track}/{risk}
  /snap/{snap}/current/bin/setup.sh
  .
  cleanup() {{
    # Run through cleanup despite errors
    set +euo pipefail
    STATUS=$( cat $OUTPUT.status )
    rm $OUTPUT*
    for pid in $( jobs -p ); do
        kill $pid
        timeout 10 tail --pid=$pid -f /dev/null || kill -9 $pid
        timeout 10 tail --pid=$pid -f /dev/null || echo "WARNING: Failed to clean up PID $pid"
    done
    exit $STATUS
  }}
  .
  wait_and_run() {{
    timeout 10 sh -c "until [ -S $XDG_RUNTIME_DIR/$WAYLAND_DISPLAY ]; do sleep 1; done"
    exec "$@"
  }}
  .
  trap cleanup EXIT
  .
  wait_and_run {snap} &
  .
  clean_env.sh frame-it gnome-text-editor \
  && echo 0 > $OUTPUT.status \
  || echo $? > $OUTPUT.status
_verification:
  {verification}
  .
  Promote from `{track}/{risk}` to `stable` at https://snapcraft.io/{snap}/releases

unit: template
template-resource: jenkins-snaps
id: snaps/{snap}-{track}-{risk}
plugin: user-interact-verify
estimated_duration: 60.0
_purpose:
  This verfies that {snap} {track}/{risk} tested fine
command:
  curl -s -H "Snap-Device-Series: 16" \
    "https://api.snapcraft.io/v2/snaps/info/{snap}" \
  | jq -r --arg TRACK "{track}" --arg RISK "{risk}" '."channel-map" | .[] | select(.channel.risk==$RISK) | [select(.channel.track==$TRACK).channel.architecture, select(.channel.track==$TRACK).revision] | @tsv' \
  | grep -v '^$'
_verification:
  1. Check the results at http://10.102.156.15:8080/blue/pipelines/?search=cert*{snap}-{track}-{risk}
  2. Check that the revisions above were tested and succeeded
  .
  Promote from `{track}/{risk}` to `stable` at https://snapcraft.io/{snap}/releases
