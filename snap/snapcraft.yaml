name: checkbox-mir
summary: Checkbox tests for the Mir project
description: |
  Collection of tests to be run on devices that are part of the mir project
adopt-info: mir-demo-server
confinement: strict
grade: stable

base: core22

plugs:
  checkbox-runtime:
    interface: content
    target: $SNAP/checkbox-runtime
    default-provider: checkbox22
  provider-resource:
    interface: content
    target: $SNAP/providers/checkbox-provider-resource
    default-provider: checkbox22
  graphics-core22:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core22

layout:
  /usr/bin/xkbcomp:
    symlink: $SNAP/usr/bin/xkbcomp
  /usr/share/libdrm:
    bind: $SNAP/graphics/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/graphics/drirc.d
  /usr/share/X11:
    symlink: $SNAP/usr/share/X11
  /usr/lib/xorg:
    symlink: $SNAP/usr/lib/xorg

environment:
  MIR_SERVER_PLATFORM_PATH: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/mir/server-platform
  QT_QPA_PLATFORM_PLUGIN_PATH: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/qt5/plugins
  XCURSOR_PATH: $SNAP/data-dir/icons:$SNAP/gnome-platform/usr/share/icons
  FONTCONFIG_PATH: $SNAP/gnome-platform/etc/fonts
  FONTCONFIG_FILE: $SNAP/gnome-platform/etc/fonts/fonts.conf

apps:
  checkbox-cli:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper]
    command: bin/checkbox-cli-wrapper
    plugs: &plugs [home, network-bind, hardware-observe,
      mount-observe, network-manager, pulseaudio, serial-port,
      system-observe, login-session-control, opengl]
    slots: &slots [wayslot, x11slot]
  graphics:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper]
    command: bin/checkbox-graphics
    plugs: *plugs
    slots: *slots
  mir:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper]
    command: bin/checkbox-mir
    plugs: *plugs
    slots: *slots
  mir-ci:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper, bin/anon-shm-preload]
    command: providers/checkbox-provider-mir/bin/run_mir_ci.sh
    extensions: [gnome]
  snaps:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper]
    command: bin/checkbox-snaps
    plugs: *plugs
  test-runner:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper]
    command: bin/test-runner
    plugs: *plugs
    slots: *slots
  service:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper]
    command: bin/checkbox-cli-wrapper service
    daemon: simple
    restart-condition: on-failure
    plugs: *plugs
    slots: *slots
  shell:
    command-chain: [bin/wrapper_local, bin/graphics-core22-wrapper]
    command: bin/shell-wrapper
    plugs: *plugs
    slots: *slots

slots:
  wayslot:
    interface: wayland
  x11slot:
    interface: x11

package-repositories:
  - type: apt
    ppa: mir-team/release

parts:
  checkbox-provider-mir:
    plugin: dump
    source: ./
    source-type: local
    build-snaps:
      - checkbox-provider-tools
      - checkbox22
    override-build: |
      export PYTHONPATH=${CRAFT_STAGE}/lib/python3.10/site-packages:${CRAFT_STAGE}/usr/lib/python3/dist-packages
      for path in $(find "/snap/checkbox22/current/providers/" -mindepth 1 -maxdepth 1 -type d); do export PROVIDERPATH=$path${PROVIDERPATH:+:$PROVIDERPATH}; done
      checkbox-provider-tools validate
      checkbox-provider-tools build
      checkbox-provider-tools install --layout=relocatable --prefix=/providers/checkbox-provider-mir --root="${CRAFT_PART_INSTALL}"
    stage-packages:
      - gawk
      - lsof
    organize:
      providers/checkbox-provider-mir/bin/mir_demo_server: usr/bin/mir_demo_server

  mir-demo-server:
    plugin: nil
    stage-packages:
      - mir-test-tools
      - mir-graphics-drivers-desktop
      - mir-graphics-drivers-nvidia
    override-pull: |
      craftctl default
      mir_version=`LANG=C apt-cache policy mir-test-tools | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      recipe_version=`git -C ${CRAFT_PROJECT_DIR} rev-list --count HEAD`
      craftctl set version=$recipe_version-mir$mir_version
    organize:
      usr/bin/mir_demo_server: usr/bin/mir_demo_server.real

  xorg:
    plugin: nil
    stage-packages:
      - xserver-xorg
      - x11-xkb-utils

  launchers:
    plugin: dump
    source: launchers/
    organize:
      '*': bin/

  bits:
    plugin: nil
    stage-packages:
      - dpkg-dev
    prime:
      - usr/bin/dpkg-architecture

  anon-shm-preload:
    source: https://github.com/MirServer/anon-shm-preload.git
    plugin: cmake

  mir-ci:
    plugin: python
    source: https://github.com/MirServer/mir-ci.git
    source-subdir: mir-ci
    source-commit: adb441e2014341d1abd8f178f02a14d5ffe38b4b
    build-packages:
    - git-lfs
    - libssl-dev
    - libwayland-dev
    - pkg-config
    override-pull: |
      git -C ${CRAFT_PROJECT_DIR} lfs pull
      craftctl default
    python-packages:
    # Work around build failures on armhf
    - --requirement
    - ${CRAFT_PROJECT_DIR}/wheels/${CRAFT_ARCH_BUILD_FOR}.txt
    - asciinema
    - mypy
    - robotframework~=6.1.1
    - rpaframework
    - rpaframework-recognition
    stage-packages:
    - libblas3
    - libgtk-4-dev
    - liblapack3
    - python3-gi
    - pluma
    - qterminal
    - qtwayland5

  glue:
    plugin: dump
    source: snap/local/glue

  graphics-core22:
    after: [mir-demo-server, xorg, bits, anon-shm-preload, mir-ci, glue]
    source: https://github.com/MirServer/graphics-core22.git
    plugin: dump
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/graphics-core22-cleanup mesa-core22 nvidia-core22
    prime:
    - bin/graphics-core22-wrapper
